<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="sugv">
	<xacro:property name="body_height" value="0.1" />
	<xacro:property name="body_radius" value="0.2" />
	<xacro:property name="wheel_caster_offset" value="0.01" />
	<xacro:property name="wheel_radius" value="${body_height/4}" />
	<xacro:property name="wheel_width" value="0.1" />
	<xacro:property name="caster_radius" value="0.02" />
	<xacro:property name="wheel_bottom" value="${-body_height/2+wheel_radius}" />
	<xacro:property name="caster_bottom" value="${-body_height/2+caster_radius}" />
	<xacro:property name="lidar_height" value="0.04" />
	<xacro:property name="lidar_radius" value="0.035" />


	<link name="base_link">
		<inertial>
			<origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
			<mass value="3.0000"/>
			<inertia ixx="0.0525" ixy="0.0" ixz="0.0" iyy="0.0525" iyz="0.0" izz="0.0600" />
		</inertial>
		<visual>
			<geometry>
				<cylinder radius="${body_radius}" length="${body_height}"/>
			</geometry>
			<material name="white">
				<color rgba="1 1 1 0.5" />
			</material>
		</visual>
		<collision>
			<geometry>
				<cylinder radius="${body_radius}" length="${body_height}"/>
			</geometry>
		</collision>
	</link>

	<link name="link_imu" />
	<joint name="joint_imu" type="fixed">
		<parent link="base_link"/>
		<child link="link_imu"/>
		<origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
	</joint>

	<link name="link_laser">
		<visual>
			<origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
			<geometry>
				<cylinder radius="${lidar_radius}" length="${lidar_height}"/>
			</geometry>
		</visual>
	</link>
	
	<joint name="joint_lidar" type="fixed">
		<parent link="base_link"/>
		<child link="link_laser"/>
		<origin xyz="0.0 0.0 ${body_height/2 + lidar_height/2}" rpy="0.0 0.0 0.0"/>
	</joint>
	

	<xacro:macro name="sugv_wheel" params="wheel_prefix *joint_pose">
		<link name="link_wheel_${wheel_prefix}">
			<inertial>
				<mass value="0.5000"/>
				<inertia ixx="0.0009" ixy="0.0" ixz="0.0" iyy="0.0009" iyz="0.0" izz="0.0014" />
			</inertial>
			<visual>
				<origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0 0.0"/>
				<geometry>
					<cylinder radius="${wheel_radius}" length="${wheel_width}"/>
				</geometry>
				<material name="pale_turquoise">
					<color rgba="0.69 0.93 0.93 1" />
				</material>
			</visual>
			<collision>
				<origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0 0.0"/>
				<geometry>
					<cylinder radius="${wheel_radius}" length="${wheel_width}"/>
				</geometry>
			</collision>
		</link>

		<gazebo reference="link_wheel_${wheel_prefix}">
			<material>Gazebo/Turquoise</material>
			<mu1 value="1.0" />
			<mu2 value="1.0" />
			<kp value="10000000.0" />
			<kd value="1.0" />
			<fdir1 value="1 0 0"/>
			<selfCollide value="false" />
		</gazebo>

		<joint name="joint_wheel_${wheel_prefix}" type="continuous">
			<parent link="base_link"/>
			<child link="link_wheel_${wheel_prefix}"/>
			<axis xyz="0 1 0"/>
			<xacro:insert_block name="joint_pose" />
		</joint>

		<transmission name="trans_${wheel_prefix}" type="SimpleTransmission">
			<type>transmission_interface/SimpleTransmission</type>
			<actuator name="motor_${wheel_prefix}">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
			<joint name="joint_wheel_${wheel_prefix}">
				<hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
			</joint>
		</transmission>

	</xacro:macro>

	<xacro:macro name="sugv_caster" params="wheel_prefix *joint_pose">
		<link name="link_caster_${wheel_prefix}">
			<inertial>
				<mass value="0.0050"/>
				<inertia ixx="0.0000" ixy="0.0" ixz="0.0" iyy="0.0000" iyz="0.0" izz="0.0000" />
			</inertial>
			<visual>
				<geometry>
					<sphere radius="${caster_radius}"/>
				</geometry>
				<material name="gray">
					<color rgba="0.5 0.5 0.5 1" />
				</material>
			</visual>
			<collision>
				<geometry>
					<sphere radius="${caster_radius}"/>
				</geometry>
			</collision>
		</link>

		<gazebo reference="link_caster_${wheel_prefix}">
			<material>Gazebo/Grey</material>
			<mu1 value="0.0" />
			<mu2 value="0.0" />
			<kp value="10000000.0" />
			<kd value="1.0" />
			<fdir1 value="1 0 0"/>
			<selfCollide value="false" />
		</gazebo>

		<joint name="joint_caster_${wheel_prefix}" type="fixed">
			<parent link="base_link"/>
			<child link="link_caster_${wheel_prefix}"/>
			<axis xyz="0 1 0"/>
			<xacro:insert_block name="joint_pose" />
		</joint>
	</xacro:macro>

	<xacro:sugv_wheel wheel_prefix="left">
		<origin xyz="0.0 ${body_radius/2} ${wheel_bottom - wheel_caster_offset}" rpy="0 0 0" />
	</xacro:sugv_wheel>

	<xacro:sugv_wheel wheel_prefix="right">
		<origin xyz="0.0 ${-body_radius/2} ${wheel_bottom - wheel_caster_offset}" rpy="0 0 0" />
	</xacro:sugv_wheel>

	<xacro:sugv_caster wheel_prefix="back">
		<origin xyz="${-body_radius/2} 0.0 ${caster_bottom - wheel_caster_offset}" rpy="0 0 0" />
	</xacro:sugv_caster>
	<xacro:sugv_caster wheel_prefix="front">
		<origin xyz="${body_radius/2} 0.0 ${caster_bottom - wheel_caster_offset}" rpy="0 0 0" />
	</xacro:sugv_caster>

	<gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
		</plugin>
	</gazebo>

	<gazebo reference="link_imu">
		<gravity>true</gravity>
		<sensor name="imu_sensor" type="imu">
			<always_on>true</always_on>
			<update_rate>100</update_rate>
			<visualize>true</visualize>
			<topic>__default_topic__</topic>
			<plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
				<topicName>sensor/imu</topicName>
				<bodyName>link_imu</bodyName>
				<updateRateHZ>10.0</updateRateHZ>
				<gaussianNoise>0.0</gaussianNoise>
				<xyzOffset>0 0 0</xyzOffset>
				<rpyOffset>0 0 0</rpyOffset>
				<frameName>link_imu</frameName>
				<initialOrientationAsReference>false</initialOrientationAsReference>
			</plugin>
			<pose>0 0 0 0 0 0</pose>
		</sensor>
	</gazebo>

	<gazebo reference="link_laser">
		<material>Gazebo/Orange</material>
		<sensor type="ray" name="head_rplidar_sensor">
			<pose>0 0 ${body_height/2 + lidar_height/2} 0 0 0</pose>
			<visualize>true</visualize>
			<update_rate>40</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>720</samples>
						<resolution>1</resolution>
						<min_angle>${-pi}</min_angle>
						<max_angle>${pi}</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.25</min>
					<max>5.0</max>
					<resolution>0.01</resolution>
				</range>
				<noise>
					<type>gaussian</type>
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin name="gazebo_ros_head_rplidar_controller" filename="libgazebo_ros_laser.so">
				<topicName>sensor/scan</topicName>
				<frameName>link_laser</frameName>
			</plugin>
		</sensor>
	</gazebo>
</robot>